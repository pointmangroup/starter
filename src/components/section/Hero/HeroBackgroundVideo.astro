---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

export interface Props {
  videoSrc?: string; // For direct MP4, WebM, etc. URLs
  vimeoSrc?: string; // For Vimeo video URLs
  posterSrc: string | ImageMetadata;
  altText?: string;
  overlayText?: string;
  overlayOpacity?: string;
}

const {
  videoSrc,
  vimeoSrc,
  posterSrc,
  altText = 'Background video',
  overlayText = '',
  overlayOpacity = 'opacity-50',
} = Astro.props;

const isPosterImageMetadataObject =
  typeof posterSrc === 'object' && posterSrc !== null && 'src' in posterSrc;
const posterSrcString = isPosterImageMetadataObject
  ? (posterSrc as ImageMetadata).src
  : (posterSrc as string);
---

<div
  x-data="{
    loaded: false,
    initMedia(el) {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            this.loadActiveMedia(el);
            observer.disconnect();
          }
        });
      }, { threshold: 0.1 });
      observer.observe(el);
    },
    loadActiveMedia(el) {
      const videoElement = el.querySelector('video');
      const iframeElement = el.querySelector('iframe');

      if (iframeElement && !iframeElement.getAttribute('src') && iframeElement.dataset.src) {
        iframeElement.onload = () => { this.loaded = true; };
        iframeElement.setAttribute('src', iframeElement.dataset.src);
      } else if (videoElement && !videoElement.getAttribute('src') && videoElement.dataset.src) {
        videoElement.setAttribute('src', videoElement.dataset.src);
        videoElement.load();
        videoElement.oncanplaythrough = () => { this.loaded = true; };
      }
    }
  }"
  x-init="initMedia($el)"
  class="relative w-full h-100 sm:h-120 md:h-200 overflow-hidden bg-black"
>
  <!-- Fallback Image -->
  <Image
    src={posterSrc as ImageMetadata}
    alt={altText}
    class="absolute inset-0 h-full w-full object-cover transition-opacity duration-700 ease-in-out"
    :class="{ 'opacity-0': loaded }"
    loading="lazy"
    decoding="async"
    aria-hidden="true"
    quality={80}
  />

  <!-- Conditional Video/Iframe Rendering -->
  {vimeoSrc && (
    <iframe
      class="absolute top-0 left-0 w-full h-full transition-opacity duration-700 ease-in-out"
      :class="{ 'opacity-100': loaded, 'opacity-0': !loaded }"
      src={vimeoSrc}
      frameborder="0"
      allow="autoplay; fullscreen; picture-in-picture"
      allowfullscreen
      title={altText}
    ></iframe>
  )} 
  {videoSrc && !vimeoSrc && (
    <video
      class="absolute top-0 left-0 h-full w-full object-cover transition-opacity duration-700 ease-in-out"
      :class="{ 'opacity-100': loaded, 'opacity-0': !loaded }"
      autoplay
      muted
      loop
      playsinline
      preload="none"
      poster={posterSrcString}
      data-src={videoSrc}
    ></video>
  )}

  <!-- Overlay Content -->
  <div
    class="relative z-10 flex h-full items-center justify-center px-4 text-center text-white"
  >
    {
      Astro.slots.has('default') ? (
        <slot />
      ) : overlayText ? (
        <h1 class="text-4xl font-bold md:text-6xl">{overlayText}</h1>
      ) : null
    }
  </div>

  <!-- Overlay Shade -->
  <div class={`absolute inset-0 bg-black ${overlayOpacity} z-0`}></div>
</div>
